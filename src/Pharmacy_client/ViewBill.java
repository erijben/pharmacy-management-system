package Pharmacy_client;

import common.OpenPdf;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.DefaultTableCellRenderer;
import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.net.Socket;

public class ViewBill extends JPanel {
    private JTable billTable; //tableau qui va afficher la liste des factures

    public ViewBill() {
        setLayout(new BorderLayout()); //Utilise un BorderLayout : haut, centre, bas.
        setBackground(Color.WHITE);

        // üîµ Titre
        JLabel lblTitle = new JLabel("üìÑ List of Bills", SwingConstants.CENTER);
        lblTitle.setFont(new Font("Segoe UI", Font.BOLD, 20));
        lblTitle.setBorder(BorderFactory.createEmptyBorder(20, 10, 5, 10));
        add(lblTitle, BorderLayout.NORTH);

        //  Consigne
        JLabel lblInstruction = new JLabel("üì¢ Double-cliquez sur une facture pour ouvrir le fichier PDF.", SwingConstants.CENTER);
        lblInstruction.setFont(new Font("Segoe UI", Font.ITALIC, 14));
        lblInstruction.setForeground(Color.GRAY);
        lblInstruction.setBorder(BorderFactory.createEmptyBorder(0, 10, 10, 10));
        add(lblInstruction, BorderLayout.BEFORE_FIRST_LINE);

        // üî• Table lecture seule
        billTable = new JTable(new DefaultTableModel(
                new Object[]{"Bill ID", "Date", "Total Paid", "Generated By"}, 0
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; //emp√™cher la modification // toutes les cellules non √©ditables
            }
        });


        billTable.setFont(new Font("Segoe UI", Font.PLAIN, 14));
        billTable.setRowHeight(30);
        billTable.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 14));
        ((DefaultTableCellRenderer) billTable.getTableHeader().getDefaultRenderer())
                .setHorizontalAlignment(SwingConstants.CENTER);

        JScrollPane scrollPane = new JScrollPane(billTable);
        scrollPane.setBorder(BorderFactory.createEmptyBorder(10, 20, 20, 20));
        add(scrollPane, BorderLayout.CENTER);

        //  Seulement bouton Close Permet de fermer la fen√™tre proprement.
        JButton btnClose = new JButton("‚ùå Close");
        btnClose.setFont(new Font("Segoe UI", Font.BOLD, 14));
        btnClose.setBackground(new Color(231, 76, 60));
        btnClose.setForeground(Color.WHITE);
        btnClose.setFocusPainted(false);
        btnClose.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        btnClose.addActionListener(e -> {
            Container topFrame = this.getTopLevelAncestor();
            if (topFrame instanceof Window) ((Window) topFrame).dispose();
        });

        JPanel bottomPanel = new JPanel();
        bottomPanel.setBackground(Color.WHITE);
        bottomPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 20, 10));
        bottomPanel.add(btnClose);
        add(bottomPanel, BorderLayout.SOUTH);

        // Charger les donn√©es depuis serveur
        loadBills();
//Charge automatiquement les factures existantes d√®s que la page est ouverte


        // Double clic sur une ligne ‚Üí ouvrir PDF
        billTable.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    int index = billTable.getSelectedRow();
                    if (index != -1) {
                        TableModel model = billTable.getModel();
                        String id = model.getValueAt(index, 0).toString(); //recupere id
                        OpenPdf.openById(id); //Ouvre le PDF correspondant
                    }
                }
            }
        });
    }

    // r√©cup√©rer les factures depuis le serveur (via socket) et remplir le tableau
    private void loadBills() {
        DefaultTableModel model = (DefaultTableModel) billTable.getModel();
        model.setRowCount(0);

        try (Socket socket = new Socket("127.0.0.1", 9000);
             PrintWriter pw = new PrintWriter(socket.getOutputStream(), true);
             BufferedReader br = new BufferedReader(new InputStreamReader(socket.getInputStream()))
        ) {
            pw.println("viewBills"); //pw.println("viewBills");

            String line;
            while (!(line = br.readLine()).equals("end")) { //Recevoir les donn√©es sous forme de lignes (chaque facture est envoy√©e comme une ligne).
                String[] data = line.split("::"); //S√©parer chaque ligne (split("::"))
                if (data.length == 4) {
                    model.addRow(data); //Ajouter chaque facture au tableau
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erreur lors du chargement des factures: " + e.getMessage());
        }
    }

    public static void main(String[] args) {
        JFrame frame = new JFrame("View Bill");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setContentPane(new ViewBill());
        frame.setSize(900, 500);
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
    }
}
